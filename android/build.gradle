buildscript {
    repositories {
        maven {
            url("$rootDir/../node_modules/react-native/android")
        }
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.4'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.10'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def isNewArchitectureEnabled() {
    // Strategy 1: Check if the consuming app has set this property
    if (rootProject.hasProperty("newArchEnabled")) {
        return rootProject.getProperty("newArchEnabled") == "true"
    }
    
    // Strategy 2: Check if we're in a React Native project with New Architecture
    if (rootProject.hasProperty("reactNativeArchitectures")) {
        def architectures = rootProject.getProperty("reactNativeArchitectures")
        return architectures.contains("fabric") || architectures.contains("turbo")
    }
    
    // Strategy 3: Check for React Native Gradle Plugin properties
    if (rootProject.hasProperty("reactNativeDir")) {
        def reactNativeDir = rootProject.getProperty("reactNativeDir")
        def packageJson = new File(reactNativeDir, "package.json")
        if (packageJson.exists()) {
            def packageJsonText = packageJson.text
            // Check for New Architecture flags in package.json
            if (packageJsonText.contains('"newArchEnabled": true') || 
                packageJsonText.contains('"fabric": true') ||
                packageJsonText.contains('"turbo": true')) {
                return true
            }
        }
    }
    
    // Strategy 4: Check for common New Architecture environment variables
    def envNewArch = System.getenv("RCT_NEW_ARCH_ENABLED")
    if (envNewArch != null) {
        return envNewArch == "1" || envNewArch == "true"
    }
    
    // Default to false for backward compatibility
    return false
}

android {
    compileSdk 35
    buildToolsVersion = "35.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdk 35
        versionCode 1
        versionName "1.7.0"
        
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    }

    lintOptions {
        abortOnError false
    }
    namespace = "io.refiner.rn"
    
    // Use Java 17 for New Architecture compatibility
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    buildFeatures {
        buildConfig true
    }
    

}

repositories {
    maven {
        url("$rootDir/../node_modules/react-native/android")
    }
    google()
    mavenCentral()
    maven {
        url("$rootDir/../node_modules/jsc-android/dist")
    }
}

dependencies {
    implementation "com.facebook.react:react-native:+"
    implementation 'io.refiner:refiner:1.5.7'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"
}
